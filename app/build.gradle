/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'checkstyle'
    id 'com.adarshr.test-logger' version '3.1.0'
    id 'se.patrikerdes.use-latest-versions' version '0.2.18'
    id 'com.github.ben-manes.versions' version '0.42.0'
    id 'io.freefair.lombok' version '6.4.1'
    id 'jacoco'
    id 'net.ltgt.errorprone' version '2.0.2'
}

compileJava {
    options.release = 17
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation 'org.apache.commons:commons-lang3:3.12.0'

    testImplementation(
            'org.junit.jupiter:junit-jupiter-params:5.8.2',
            'org.slf4j:slf4j-log4j12:2.0.0-alpha6',
            'org.assertj:assertj-core:3.22.0'
    )

    errorprone 'com.google.errorprone:error_prone_core:2.11.0'
}

application {
    // Define the main class for the application.
    mainClass = 'hexlet.code.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

testlogger {
    showStandardStreams true
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

checkstyle {
    toolVersion '9.2.1'
}
